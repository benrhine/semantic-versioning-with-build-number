name: Full CI Build

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main", "develop"]
    paths-ignore: ["docs/**", "docker/**", "*", "!pyproject.toml", "**.md"]
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths-ignore: ["docs/**", "docker/**", "*", "!pyproject.toml", "**.md"]

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ubuntu-setup-gradle-environment:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java-version: [ "17" ]                        # ONLY TAKES MAJOR VERSION
        jdk-publisher: [ "corretto" ]
        gradle-version: [ "7.6.1" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
      fail-fast: false
    uses: ./.github/workflows/setup-gradle-environment.yml        # Starting with the ./. means it is a local reusable workflow
    with:
      os: ${{ matrix.os }}
      java-version: ${{ matrix.java-version }}
      jdk-publisher: ${{ matrix.jdk-publisher }}
      gradle-version: ${{ matrix.gradle-version }}

#  ubuntu-unit-test-gradle-environment:
#    needs: ubuntu-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/unit-test.yml                       # Starting with the ./. means it is a local reusable workflow
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  ubuntu-int-test-gradle-environment:
#    needs: ubuntu-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/int-test.yml                        # Starting with the ./. means it is a local reusable workflow
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  ubuntu-checkstyle-gradle-environment:
#    needs: ubuntu-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        java-version: [ "17"]                                     # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.6.1" ]
#      fail-fast: false
#    uses: ./.github/workflows/checkstyle.yml                      # Starting with the ./. means it is a local reusable workflow
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  ubuntu-pmd-gradle-environment:
#    needs: ubuntu-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        java-version: [ "17"]                                     # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.6.1" ]
#      fail-fast: false
#    uses: ./.github/workflows/pmd.yml                             # Starting with the ./. means it is a local reusable workflow
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}

#  windows-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/setup-gradle-environment.yml
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  windows-unit-test-gradle-environment:
#    needs: windows-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/unit-test.yml
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  windows-int-test-gradle-environment:
#    needs: windows-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/int-test.yml
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  macos-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ macos-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/setup-gradle-environment.yml
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  macos-unit-test-gradle-environment:
#    needs: macos-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ macos-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/unit-test.yml
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
#
#  macos-int-test-gradle-environment:
#    needs: macos-setup-gradle-environment
#    strategy:
#      matrix:
#        os: [ macos-latest ]
#        java-version: [ "17", "18", "19" ]                        # ONLY TAKES MAJOR VERSION
#        jdk-publisher: [ "corretto" ]
#        gradle-version: [ "7.5.1", "7.6", "7.6.1", "8.0", "8.0.1", "8.0.2" ] # Do not work with java 19 - "7.4", "7.4.1", "7.5",
#      fail-fast: false
#    uses: ./.github/workflows/int-test.yml
#    with:
#      os: ${{ matrix.os }}
#      java-version: ${{ matrix.java-version }}
#      jdk-publisher: ${{ matrix.jdk-publisher }}
#      gradle-version: ${{ matrix.gradle-version }}
